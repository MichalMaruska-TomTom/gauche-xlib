CC = @CC@

X_LDFLAGS := $(shell pkg-config --libs x11 xi xkbfile)
X_CFLAGS := $(shell pkg-config  --cflags x11 xi xkbfile)

# These may be overridden by make invocators
DESTDIR  = 
OPTFLAGS = @OPTFLAGS@


# These are set by configure
CFLAGS = @CFLAGS@ $(OPTFLAGS) $(X_CFLAGS) -fPIC
LDFLAGS = @LDFLAGS@
X_LIBS= -lfork
# -lXtst
# mmc: fixme!
LIBS = @LIBS@ $(X_LIBS)
GOSH = @GOSH@
GAUCHE_CONFIG = @GAUCHE_CONFIG@
GAUCHE_TOP = @GAUCHE_TOP@
INSTALL = @INSTALL@

ARCHFILES = xlib.so

SCMFILES = xlib.scm  $(wildcard xlib/*scm xlib/xkb/*scm)
BINFILES = $(wildcard bin/*.scm)

HEADERS =

TARGET = xlib.so
OBJS = xlib_head.o xlib.o xlib_tail.o  xlib-lib.o
CONFIG_GENERATED = Makefile config.cache config.log config.status\
		   autom4te*.cache xlib_head.c xlib_tail.c

INSTALL_TYPE = @INSTALL_TYPE@
HEADER_INSTALL_DIR  = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)incdir`/
SCM_INSTALL_DIR     = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)libdir`/
ARCH_INSTALL_DIR    = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)archdir`/
BIN_INSTALL_DIR = /usr/bin

GENSTUB = mmc/mmgenstub

all : $(TARGET)

xlib.so : $(OBJS)
	$(CC) $(X_LDFLAGS) $(LDFLAGS) xlib.so $(OBJS) $(LIBS)

xlib.c : xlib.stub xlib-lib.h
	$(GOSH) $(GENSTUB) xlib.stub || (rm $@ ; false)

xlib-lib.o:  xlib-lib.c  xlib-lib.h
test : all
	@rm -f test.log
	$(GOSH) -I. test.scm > test.log

install : all
	$(INSTALL) -d $(HEADER_INSTALL_DIR)
	$(INSTALL) -d $(SCM_INSTALL_DIR)
	$(INSTALL) -d $(ARCH_INSTALL_DIR)
	@for f in $(HEADERS) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -vm 444 $$f $(HEADER_INSTALL_DIR); \
	  fi; \
	done
	@for f in $(SCMFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -D -vm 444 $$f $(SCM_INSTALL_DIR)/$$f; \
	  fi; \
	done
	@for f in $(ARCHFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -vm 555 $$f $(ARCH_INSTALL_DIR); \
	  fi; \
	done
	install -v -D --directory $(DESTDIR)$(BIN_INSTALL_DIR)
	@for p in $(BINFILES); do \
	  $(INSTALL) -vm 555 $$p $(DESTDIR)$(BIN_INSTALL_DIR) ; \
	done

clean :
	rm -rf core $(TARGET) $(OBJS) *~ test.log so_locations xlib.c

distclean : clean
	rm -rf $(CONFIG_GENERATED)

realclean : clean
	rm -rf $(CONFIG_GENERATED) configure

# 'link' creates symlinks from source tree to extension modules, so that
# it can be tested within the source tree.  'unlink' removes them.
# these are only for developer's.

link : $(TARGET) $(SCMFILES)
	$(GOSH) ../xlink -d gauche -l $(TARGET) $(SCMFILES)

unlink :
	-$(GOSH) ../xlink -d gauche -u $(TARGET) $(SCMFILES)


version=$(shell cat VERSION)
package=gauche-xlib
##  for the maintainer/distributor:
tar:    clean
	make -f ../makefile.packages  version=$(version) package=$(package)

